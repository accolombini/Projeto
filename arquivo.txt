Testando git - primeiros passos
git init (ativa o git para o projeto em questão)
git config --global
git config --global user.name ... (nome do usuário)
git config --global user.email ... (email do usuário)
git config --global -l (lista todas as configurações)
git config --global core.editor <nome do editor desejado - notepad, por exemplo> (define um editor de trabalho para o git)
git status (status dos arquivos controlados pelo git)
git add <nome do arquivo> (adiciona o arquino na stage para que o git passe a controlá-lo)
git commit -m 'Uma mensagem clara do que foi feito desde a última alteração - procure ser claro aqui' <tira uma foto do arquivo naquele momento>
git add . (adiciona todos os arquivos do diretório controlado na stage)
git commit -am 'Uma mensagem clara do que foi feito desde a última alteração' (este comando realiza a adição na stage e realiza o commit de uma vez)
É importante destacar que o comando git commit -am só é válido para arquivos que já estão senfo rastreados (não se aplica na primeira vez)
git log (exibe o histórico de commits do(s) arquiv(s) controlado(s) --> Project history)
Atenção quanto o log não couber em uma tela aparecerá o sinal de : para sair da tela de log é preciso preciosar a tecla "q"
git checkout <código do commit exemplo: 071bb901c4cf20bb8b00f7c7497eee5f5d31b243> (nos poermite visualizar o arquivo naquele instante do snapshot)
git checkout master (para retornar para o master - arquivo atual ou último arquivo comitado)
git clone (https://nome do repositório criado no github para onde deverão ser clonados todos os nossos arquivos --> Neste caso não há necessidade do git init)
Atenção sempre que um novo arquivo for adicionado ao projeto ele precisa ser adicionado com o comando
git add <nome do arquivo>
E para o primeiro commit não se esqueça de usar a cláusula -m, assim:
git commit - m 'Comentário inicial do arquivo criado'
Para subir os arquivos comitados para o GitHub usamos o comando:
git push (este comando remete todos os arquivos comitados localmente para o repositório no GitHub)
Atenção --> cuidado com o repositório criado no GitHub e clonado localmente, procure ter um repositório especifico - ok
